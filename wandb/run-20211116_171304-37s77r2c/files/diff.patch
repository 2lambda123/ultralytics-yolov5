diff --git a/azure_wrapper.py b/azure_wrapper.py
index 76fcade..b870eee 100644
--- a/azure_wrapper.py
+++ b/azure_wrapper.py
@@ -43,7 +43,7 @@ def _setup():
         subprocess.run(["pip", "install", f"{aisa_utils_wheel_path}"])
 
 
-def _get_data_yaml(dataset_location: Path, add_test: bool = False) -> dict:
+def _get_data_yaml(dataset_location: Path, is_test: bool = False) -> dict:
     dataset_data_yaml_path = list(dataset_location.rglob("*data.yaml"))
     if len(dataset_data_yaml_path) == 1:
         dataset_data_yaml_path = dataset_data_yaml_path[0]
@@ -58,15 +58,18 @@ def _get_data_yaml(dataset_location: Path, add_test: bool = False) -> dict:
             nc=1,
             names=["Sperm"],
         )
-
+    print(dataset_location)
+    print(dataset_data_yaml_path)
     # Overwrite location keys to be able to launch from anywhere
     data_yaml["path"] = str(dataset_data_yaml_path.parent.as_posix())
-    data_yaml["train"] = "images/train"
-    data_yaml["val"] = "images/val"
-    if add_test:
+    if is_test:
         data_yaml["test"] = "images/test"
+        data_yaml["train"] = ""
+        data_yaml["val"] = ""
     else:
         data_yaml.pop("test", None)
+        data_yaml["train"] = "images/train"
+        data_yaml["val"] = "images/val"
 
     return data_yaml
 
@@ -129,7 +132,7 @@ def train(
         train_yaml_file_path = Path("data.yaml")
         with train_yaml_file_path.open("w") as file:
             yaml.dump(train_data, file)
-        print(f"Created data yaml at {train_yaml_file_path} containing:")
+        print(f"Created data yaml at {train_yaml_file_path} containing: {train_data}")
     elif train_dataset_location.is_file() and train_dataset_location.suffix == ".yaml":
         train_yaml_file_path = train_dataset_location
     else:
@@ -140,7 +143,6 @@ def train(
         workers = 1
     else:
         workers = 4
-
     path_to_best_model = train.run(
         cfg=f"models/{yolo_model_version}.yaml",
         weights=f"{yolo_model_version}.pt",
@@ -154,6 +156,7 @@ def train(
         workers=workers,
         entity=entity,
         patience=100,
+        cache="disk"
     )
     print("Finished training function...")
     #### END OF TRAINING CODE ####
@@ -164,7 +167,7 @@ def train(
     mojo_test_yaml_file_path = Path("test_data.yaml")
     with mojo_test_yaml_file_path.open("w") as file:
         yaml.dump(mojo_test_data, file)
-    print(f"Created data yaml at {mojo_test_yaml_file_path} containing:")
+    print(f"Created data yaml at {mojo_test_yaml_file_path} containing: {mojo_test_data}")
 
     print("Running mojo testing function...")
     mojo_test.mojo_test(
diff --git a/train.py b/train.py
index 6cd0b7b..33a7e02 100644
--- a/train.py
+++ b/train.py
@@ -365,6 +365,7 @@ def train(hyp,  # path/to/hyp.yaml or hyp dictionary
             if fi > best_fitness:
                 best_fitness = fi
             log_vals = list(mloss) + list(results) + lr + extra_metrics
+            print(log_vals, epoch, best_fitness, fi)
             callbacks.on_fit_epoch_end(log_vals, epoch, best_fitness, fi)
             # Save model
             if (not nosave) or (final_epoch and not evolve):  # if save
diff --git a/utils/loggers/wandb/wandb_utils.py b/utils/loggers/wandb/wandb_utils.py
index 5d495c7..1153d2b 100644
--- a/utils/loggers/wandb/wandb_utils.py
+++ b/utils/loggers/wandb/wandb_utils.py
@@ -480,7 +480,7 @@ class WandbLogger():
         if self.wandb_run:
             with all_logging_disabled():
                 if self.bbox_media_panel_images:
-                    self.log_dict["Bounding Box Debugger/Images"] = self.bbox_media_panel_images
+                    self.log_dict["BoundingBoxDebugger"] = self.bbox_media_panel_images
                 wandb.log(self.log_dict)
                 self.log_dict = {}
                 self.bbox_media_panel_images = []
