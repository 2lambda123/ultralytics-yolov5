diff --git a/azure_wrapper.py b/azure_wrapper.py
index 76fcade..364eac7 100644
--- a/azure_wrapper.py
+++ b/azure_wrapper.py
@@ -58,7 +58,8 @@ def _get_data_yaml(dataset_location: Path, add_test: bool = False) -> dict:
             nc=1,
             names=["Sperm"],
         )
-
+    print(dataset_location)
+    print(dataset_data_yaml_path)
     # Overwrite location keys to be able to launch from anywhere
     data_yaml["path"] = str(dataset_data_yaml_path.parent.as_posix())
     data_yaml["train"] = "images/train"
@@ -140,7 +141,6 @@ def train(
         workers = 1
     else:
         workers = 4
-
     path_to_best_model = train.run(
         cfg=f"models/{yolo_model_version}.yaml",
         weights=f"{yolo_model_version}.pt",
@@ -154,6 +154,7 @@ def train(
         workers=workers,
         entity=entity,
         patience=100,
+        cache="disk"
     )
     print("Finished training function...")
     #### END OF TRAINING CODE ####
diff --git a/train.py b/train.py
index 6cd0b7b..33a7e02 100644
--- a/train.py
+++ b/train.py
@@ -365,6 +365,7 @@ def train(hyp,  # path/to/hyp.yaml or hyp dictionary
             if fi > best_fitness:
                 best_fitness = fi
             log_vals = list(mloss) + list(results) + lr + extra_metrics
+            print(log_vals, epoch, best_fitness, fi)
             callbacks.on_fit_epoch_end(log_vals, epoch, best_fitness, fi)
             # Save model
             if (not nosave) or (final_epoch and not evolve):  # if save
diff --git a/utils/loggers/wandb/wandb_utils.py b/utils/loggers/wandb/wandb_utils.py
index 5d495c7..1153d2b 100644
--- a/utils/loggers/wandb/wandb_utils.py
+++ b/utils/loggers/wandb/wandb_utils.py
@@ -480,7 +480,7 @@ class WandbLogger():
         if self.wandb_run:
             with all_logging_disabled():
                 if self.bbox_media_panel_images:
-                    self.log_dict["Bounding Box Debugger/Images"] = self.bbox_media_panel_images
+                    self.log_dict["BoundingBoxDebugger"] = self.bbox_media_panel_images
                 wandb.log(self.log_dict)
                 self.log_dict = {}
                 self.bbox_media_panel_images = []
